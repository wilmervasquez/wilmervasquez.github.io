---
interface Props {
	title: string;
}

const { title } = Astro.props;

const n = Array.from({ length: 10 }, () => `rgba(${Math.random()*255}, ${Math.random()*255}, ${Math.random()*255}, ${Math.random()})`)
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="fn">
			{n.map(color=> <div class="color" style={`background:${color}; top:${Math.random()*100}%;left:${Math.random()*100}%`}></div>)}
		</div>
		<div>
			<slot />
		</div>
	</body>
</html>
<style is:global>
	:root {
		
	}
	* {
		color-scheme: light dark;
	}
	html {
		font-family: sans-serif;
		background: #08090A;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	body {
		max-width: 800px;
		margin: 0 auto;
	}

	.fn {

	}
	.color {
		z-index: -1;
		width: 200px;
		aspect-ratio: 1;
		transform: translate(-50px,-50px);
		position: fixed;
		filter: blur(100px);
	}
</style>
