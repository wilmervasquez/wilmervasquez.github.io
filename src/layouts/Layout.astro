---
import Header from '../components/Header.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;

const n = Array.from({ length: 10 }, () => `rgba(${Math.random()*255}, ${Math.random()*255}, ${Math.random()*255}, ${Math.random()})`)

function randPosition() {
	console.log(23)
	return Math.round(Math.random()*200) - 100
}

function randDeg() {
	return Math.random() * 180 - 90
}
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<div class="fondo overflow-hidden">
			{n.map(color=> <div class="color" style={
				`background:${color}; 
				--x:${randPosition()}%;
				--y:${randPosition()}%;
				--x2:${randPosition()}%;
				--y2:${randPosition()}%;
				--x3:${randPosition()}%;
				--y3:${randPosition()}%;
				--x4:${randPosition()}%;
				--y4:${randPosition()}%`
				}></div>)}
			{
				['Javascript','Django','Tailwind CSS', 'CSS','React','PHP','Laravel', 'Python','HTML','Figma','Web','Software'].map((lang) => {
					return (
						<div class="chip" style={`
						 top:${Math.random() * 100}%; 
						 left: ${Math.random() * 100}%;
						 rotate: ${randDeg()}deg;
					 `}>
							{lang} 
						</div>
					);
				})
			}
		</div>
		<div class="content">
			<Header/>
			<slot />
		</div>
	</body>
</html>
<style is:global>
	:root {
		
	}
	* {
		color-scheme: light dark;
		/* outline: 1px dashed rgba(255, 255, 255, 0.473); */
	}
	html {
		font-family: sans-serif;
		background: hsl(222, 0%, 5%);
		scroll-behavior: smooth;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	body {
		max-width: 800px;
		margin: 0 auto;
	}

	.fondo {

		z-index: -3;
	}
	@keyframes ani {
		0%, 100% {
			top: var(--x);
			left: var(--y);
		}
		25% {
			top: var(--x2);
			left: var(--y2);
		}
		50% {
			top: var(--x3);
			left: var(--y3);
		}
		75% {
			top: var(--x4);
			left: var(--y4);
		}
	}
	
	.color {
		width: 200px;
		aspect-ratio: 1;
		transform: translate(-50px,-50px);
		position: fixed;
		filter: blur(70px);
		border-radius: 50%;
		animation: ani 100s linear infinite;
		z-index: -1;
		opacity: 0.5;
	}
	.chip {
		background-color: rgba(240, 255, 255, 0.3);
		width: min-content;
		padding: 8px 12px;
		border-radius: 120px;
		opacity: 0.1;
		position: absolute;
		z-index: -1;

	}
</style>
